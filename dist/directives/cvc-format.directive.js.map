{"version":3,"file":"cvc-format.directive.js","sourceRoot":"","sources":["../../src/directives/cvc-format.directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAoE;AACpE,qDAAmD;AAMnD,IAAa,kBAAkB;IAI7B,4BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;IACtC,CAAC;IAEqC,uCAAU,GAAV,UAAW,CAAC;QAChD,EAAE,CAAC,CAAC,CAAC,wBAAU,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAU,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACpF,CAAC,CAAC,cAAc,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IACkC,oCAAO,GAAP,UAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IACmC,qCAAQ,GAAR,UAAS,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IACkC,oCAAO,GAAP,UAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IAGO,wCAAW,GAAnB,UAAoB,CAAC;QAArB,iBAMC;QALC,UAAU,CAAC;YACT,IAAI,GAAG,GAAG,wBAAU,CAAC,qBAAqB,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9D,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAI,CAAC,MAAM,CAAC,YAAY,GAAG,wBAAU,CAAC,OAAO,CAAC,GAAG,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,yBAAC;AAAD,CAAC,AAhCD,IAgCC;AAxBuC;IAArC,mBAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;oDAIpC;AACkC;IAAlC,mBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iDAEjC;AACmC;IAAnC,mBAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;kDAElC;AACkC;IAAlC,mBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iDAEjC;AArBU,kBAAkB;IAJ9B,gBAAS,CAAC;QACT,QAAQ,EAAE,SAAS;KACpB,CAAC;qCAMwB,iBAAU;GAJvB,kBAAkB,CAgC9B;AAhCY,gDAAkB","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\r\nimport { CreditCard } from '../shared/credit-card';\r\n\r\n@Directive({\r\n  selector: '[ccCVC]'\r\n})\r\n\r\nexport class CvcFormatDirective {\r\n\r\n  public target;\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.target = this.el.nativeElement;\r\n  }\r\n\r\n  @HostListener('keypress', ['$event']) onKeypress(e) {\r\n    if (!CreditCard.restrictNumeric(e) && !CreditCard.restrictCvc(e.which, this.target)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  @HostListener('paste', ['$event']) onPaste(e) {\r\n    this.reformatCvc(e)\r\n  }\r\n  @HostListener('change', ['$event']) onChange(e) {\r\n    this.reformatCvc(e)\r\n  }\r\n  @HostListener('input', ['$event']) onInput(e) {\r\n    this.reformatCvc(e)\r\n  }\r\n\r\n\r\n  private reformatCvc(e) {\r\n    setTimeout(() => {\r\n      let val = CreditCard.replaceFullWidthChars(this.target.value);\r\n      val = val.replace(/\\D/g, '').slice(0, 4);\r\n      this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target);\r\n    });\r\n  }\r\n\r\n}\r\n"]}